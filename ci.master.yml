# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool: THFServices

variables:
- name: imageName
  value: 'docker.totvs.io/thf/customer-api'

steps:
- script: |
    docker build --no-cache --pull -f Dockerfile -t $(imageName):$(Build.BuildNumber) .
  displayName: Build image TAG

- script: |
    docker tag $(imageName):$(Build.BuildNumber) $(imageName):latest
  displayName: Tag image as LATEST
    
- task: Docker@1
  displayName: Push image TAG Build
  inputs:
    command: Push an image
    containerregistrytype: Container Registry
    dockerRegistryEndpoint: docker.totvs.io
    imageName: $(imageName):$(Build.BuildNumber)
    dockerFile: Dockerfile
    tagMultipleImages: false
    imageNamesPath: $(Build.BuildNumber)
    qualifyImageName: false
    restartPolicy: always

- task: Docker@1
  displayName: Push image TAG Latest
  inputs:
    command: Push an image
    containerregistrytype: Container Registry
    dockerRegistryEndpoint: docker.totvs.io
    imageName: $(imageName):latest
    dockerFile: Dockerfile
    tagMultipleImages: false
    imageNamesPath: latest
    restartPolicy: always

- script: |
      docker rmi $(imageName):$(Build.BuildNumber)
      docker rmi $(imageName):latest
  displayName: Remove images (TAG and LATEST)

- script: "sed -i 's/PLACE_HOLDER_TAG/$(Build.BuildNumber)/g' deployment/deployment_customer_api/deployment.yaml"
  displayName: 'Replace PLACE_HOLDER_TAG'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: deployment_customer_api/deployment.yaml'
  inputs:
    PathtoPublish: 'deployment'
    ArtifactName: 'deployment'
    publishLocation: Container
    TargetPath: $(System.DefaultWorkingDirectory)